name: Alert Deploy Status

on:
  pull_request:
    types: ['closed']

# job is triggered only when PR is closed and merged to the 'main' branch
jobs:
  alert_deploy_status:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: prepare to get github repo url
        run: |
          sudo apt install jq
      - uses: actions/checkout@v3

      # Parse PR
      - name: get Pull Request Title
        id: pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "pull_request_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pull_request_title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT

      - name: print Pull Request Title on cli
        run: |
          echo "Pull Request title is: ${{ steps.pr_info.outputs.pull_request_title }}"

      # Send slack alarm
      - name: prepare for a slack-send environment
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "channel": "#test-for-github-action", "username": "Alert Manager", "text": "*===UPDATE ALARM===*", "icon_emoji": ":seal:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: fail component_get pr body
        id: failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          exit 1
          echo "pull_request_body=${{ github.event.pull_request.body }}" >> $GITHUB_OUTPUT
          echo "PR BODY: ${{ steps.failed.outputs.pull_request_body }}"

      - name: Failed send a slack alarm
        if: ${{ failure() }}
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPO: ${{ toJson(github) }}
        run: |  
          GITHUB_REPO_URL_w=$(echo $GITHUB_REPO | jq '.repositoryUrl')
          # "와 git:// 삭제
          GITHUB_REPO_URL=$(echo "${GITHUB_REPO_URL_w:7:-1}") 
          
          chmod +x alertFailure.sh
          ./alertFailure.sh "$SLACK_WEBHOOK_URL" $GITHUB_REPO_URL "${{ steps.pr_info.outputs.pull_request_title }}"
          exit 1

      - name: SUCCESS send a slack alarm
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPO: ${{ toJson(github) }}
        run: |  
          GITHUB_REPO_URL_w=$(echo $GITHUB_REPO | jq '.repositoryUrl')
          # "와 git:// 삭제
          GITHUB_REPO_URL=$(echo "${GITHUB_REPO_URL_w:7:-1}") 
          
          chmod +x alertSuccess.sh
          ./alertSuccess.sh "$SLACK_WEBHOOK_URL" $GITHUB_REPO_URL "${{ steps.pr_info.outputs.pull_request_title }}"

      # Update README file
      - name: Update README.md
        shell: bash
        run: |
          chmod +x updateReadme.sh
          ./updateReadme.sh