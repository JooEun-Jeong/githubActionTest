name: PS Count

on:
  #schedule:
  #  - cron: '* * * * *'

  pull_request_target:
    types: ['opened']
  push:
    branches: ['main']

jobs:
  alert:
    runs-on: ubuntu-latest
    steps:
      - name: prepare to get github repo url
        run: |
          sudo apt install jq
      - uses: actions/checkout@v3

      # Parse Commit 
      - name: get commit information
        id: commit_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "commit_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "commit_message=${{ github.event.head_commit.message }}"  >> $GITHUB_OUTPUT
      
      - name: output Commit Message
        run: |
          echo "Commit message is: ${{ steps.commit_info.outputs.commit_message }}"

      # Parse PR
      - name: get Pull Request Information
        id: pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "pull_request_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pull_request_message=${{ github.event.pull_request.body }}" >> $GITHUB_OUTPUT

      - name: output Pull Request Message
        run: |
          echo "Pull Request message is: ${{ steps.pr_info.outputs.pull_request_message }}"

      # Send slack alarm
      - name: prepare for a slack-send environment
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "channel": "#test-for-github-action", "username": "Alert Manager", "text": "There is an update!", "icon_emoji": ":seal:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # - name: fail component
      #   id: 
      #   uses: muinmomin/webhook-action@v1.0.0
      #   run: |
      #     echo this is a fail component

      - name: SUCCESS _ send a slack alarm
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPO: ${{ toJson(github) }}
        run: |  
          GITHUB_REPO_URL_w=$(echo $GITHUB_REPO | jq '.repositoryUrl')
          # "와 git:// 삭제
          GITHUB_REPO_URL=$(echo "${GITHUB_REPO_URL_w:7:-1}") 
          
          # # git://이 붙어있는 경우.
          # GITHUB_REPO_URL_pre=${{ github.repositoryUrl }}
          # GITHUB_REPO_URL_=$(echo "${GITHUB_REPO_URL_pre:6}") 
          
          chmod +x alert.sh
          ./alert.sh "$SLACK_WEBHOOK_URL" $GITHUB_REPO_URL

      # Update README file
      - name: Update README.md
        shell: bash
        run: |
          chmod +x updateReadme.sh
          ./updateReadme.sh